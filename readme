I implemented a pretty basic neural net in C++ using the Eigen library, with
  a quadratic cost function. The neural net classifies the Iris data-set with
  98% accuracy with the hyperparameters I chose.

I implemented 2 classes; a Network class for the neural net, and a Iris_Loader
  class to load the dataset in.

To run:

  1. Edit ./src/Makefile so that the path to the Eigen library is set correctly
       if it isn't already
  2. Run Makefile:

    cd src
    make
    chmod u+x test
    ./test

TODO:

  1. Implement more optimizations (better init value, dropoff, etc)
  2. Make code more modular (cost functions and activation functions)
  3. Convolutional neural nets 
